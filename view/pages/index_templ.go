// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/farisamirmudin/gowatch/view/layout"
import "github.com/farisamirmudin/gowatch/view/components"

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h1 class=\"display-1\">Go Watch</h1><div class=\"gap-4 d-flex flex-column\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = components.Input().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"results\"></div><div id=\"player\"></div><video id=\"video\" autoplay></video></div><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\" crossorigin=\"anonymous\"></script> <script src=\"https://unpkg.com/htmx.org@1.9.4\"></script> <script src=\"https://cdn.jsdelivr.net/npm/hls.js@1\"></script> <script src=\"https://cdn.plyr.io/3.7.8/plyr.polyfilled.js\"></script> <script>\n      const hls = new Hls();\n      const defaultOptions = {\n        keyboard: {\n          focused: true,\n          global: true,\n        },\n        speed: {\n          selected: 1,\n          options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n        },\n        controls: [\n          \"play-large\",\n          \"restart\",\n          \"rewind\",\n          \"play\",\n          \"fast-forward\",\n          \"progress\",\n          \"current-time\",\n          \"duration\",\n          \"mute\",\n          \"volume\",\n          \"settings\",\n          \"fullscreen\",\n        ],\n      };\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        const availableQualities = hls.levels.map((level) => level.height);\n        new Plyr(document.querySelector(\"#video\"), {\n          ...defaultOptions,\n          quality: {\n            default: availableQualities[0],\n            options: availableQualities,\n            forced: true,\n            onChange: (quality) => {\n              window.hls.levels.forEach((level, levelIndex) => {\n                if (level.height === quality)\n                  window.hls.currentLevel = levelIndex;\n              });\n            },\n          },\n        });\n      });\n      window.hls = hls;\n    </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
